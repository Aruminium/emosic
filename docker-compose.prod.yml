version: "3"
services:
  rust-app:
    image: rust:1.67
    expose:
      - 8080
    tty: true
    volumes:
      - ./rust-app:/app
    working_dir: /app
    command: cargo run
  bff:
    container_name: bff
    build:
      context: .
      dockerfile: ./docker/bff/Dockerfile.prod
    tty: true
    env_file:
      - ./docker/bff/api.env
    volumes:
      - ./bff:/home/myuser/app
    expose:
      - 9000
    command: uvicorn main:app --reload --host 0.0.0.0 --port 9000
  nginx:
    container_name: nginx
    image: nginx
    platform: linux/amd64
    ports:
      - 80:80
      - 443:443
    tty: true
    environment:
      - TZ=Asia/Tokyo
    volumes:
      - ./docker/nginx/prod/default.conf:/etc/nginx/default.conf
      - ./docker/nginx/prod/letsencrypt:/etc/letsencrypt
      - ./docker/nginx/prod/log:/var/log/nginx
      - ./docker/nginx/prod/html:/usr/share/nginx/html
    depends_on:
      - rust-app
    command: "/bin/sh -c 'while :; do sleep 36h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    container_name: certbot
    image: certbot/certbot:arm64v8-latest
    platform: linux/amd64
    volumes:
      - ./docker/nginx/prod/html:/usr/share/nginx/html
      - ./docker/nginx/prod/letsencrypt:/etc/letsencrypt
      - ./docker/nginx/prod/log_letsencrypt:/var/log/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: always

networks:
  default:
    name: emosic-network
    driver: bridge

volumes:
  target-cache:
  cargo-cache: